plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.1.0.4882"
    id 'jacoco'
}

group = 'assignment'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot and Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA dependency
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Validation
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Database and Flyway
    implementation 'mysql:mysql-connector-java:8.0.33' // MySQL connector for production
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql' // Flyway MySQL support

    // OpenAPI Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // For JSON serialization
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // HTTP Client and JSON Parsing for Imgur Integration
    implementation 'org.apache.httpcomponents:httpclient:4.5.13' // HTTP client for requests
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2' // JSON parsing
    implementation 'org.apache.httpcomponents:httpclient:4.5.13' // Core HTTP Client
    implementation 'org.apache.httpcomponents:httpmime:4.5.13'   // MIME handling for file uploads

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'com.h2database:h2' // H2 database for testing
}

tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test // Ensures tests are run before generating the report
    reports {
        xml.required = true
        html.required = true
    }
}

sonar {
    properties {
        property "sonar.projectKey", "game"
        property "sonar.projectName", "game"
        property "sonar.qualitygate.wait", true
        property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "**/generated/**, **/lombok/**/*.class"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
    }
}
